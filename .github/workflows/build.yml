name: ActionsTest

on:
  pull_request:
        branches: 
          - main
        types: [opened, synchronize, reopened, labeled]
  label:
        types: [created, edited] 
jobs:
 live:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'macos-latest') || contains(github.event.pull_request.labels.*.name, 'windows-latest') }}
    runs-on: ${{ (github.event.pull_request.labels.*.name ) }}
               
    steps: 

     - name: Check Brand Label
       id: check_brand_label 
       run: |
         if echo "${{ github.event.pull_request.labels.*.name }}" | grep -q "brand|v|mode"; then
         echo "::set-output name=brand_value::$(echo ${{ github.event.pull_request.labels.*.name }} | awk -F ':' '/brand/ {print $2}')"
         echo "::set-output name=v_value::$(echo ${{ github.event.pull_request.labels.*.name }} | awk -F ':' '/v/ {print $2}')"
         echo "::set-output name=mode_value::$(echo ${{ github.event.pull_request.labels.*.name }} | awk -F ':' '/mode/ {print $2}')"
        
         else
            echo "::set-output name=brand_selected::false"
            echo "::set-output name=default_value::anywhere.app"
            echo "::set-output name=v_selected::false"
            echo "::set-output name=default_value::1.0.0"
            echo "::set-output name=brand_selected::false"
            echo "::set-output name=mode_value::dev-ts"
         fi 

     - name: Setup checkout@v2
       uses: actions/checkout@v2

     - name: Setup Node 16.x runtime
       uses: actions/setup-node@v1 
       with:
         node-version: 16.x
              
     - name: Enter Input Values.
       run: |
            echo "Mode: ${{ github.event.inputs.mode }}"
            echo "Version: ${{ github.event.inputs.version }}"
            echo "Brand: ${{ github.event.inputs.brand }}"
            echo "OS: ${{ github.event.inputs.OS }}"
              
     - name: Cache node_modules  
       uses: actions/cache@v2
       with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-

     - name: Set up JavaScript
       id: setup-js
       run: 
         echo "::set-output name=getData::\$(node -e \"console.log(JSON.stringify(require('../../../store/data.js').getData()))\")"


     - name: Store data
       run: |
        echo "Mode: ${{ steps.setup-js.outputs.getData }}"