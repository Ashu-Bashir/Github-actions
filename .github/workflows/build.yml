name: ActionsTest

on:
  pull_request:
        branches: 
          - main
        types: [opened, synchronize, reopened, labeled]
  label:
        types: [created, edited] 
jobs:
 live:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'macos-latest') || contains(github.event.pull_request.labels.*.name, 'windows-latest') }}
    runs-on: ${{ (github.event.pull_request.labels.*.name ) }}
         
    steps: 

     - name: Extract Labels
       id: extract-labels
       run: |
          brand_label=$(echo "${{ github.event.pull_request.labels.*.name }}" | grep -oP '(?<=brand:)[^,]*')
          version_label=$(echo "${{ github.event.pull_request.labels.*.name }}" | grep -oP '(?<=v:)[^,]*')
          mode_label=$(echo "${{ github.event.pull_request.labels.*.name }}" | grep -oP '(?<=mode:)[^,]*')

          echo "::set-output name=brand::${brand_label:-anywhere.app}"
          echo "::set-output name=version::${version_label:-1.0.0}"
          echo "::set-output name=mode::${mode_label:-dev-ts}"

     - name: Store data
       run: | 
            echo "Brand: ${{ steps.extract-labels.outputs.brand }}"
            echo "Version: ${{ steps.extract-labels.outputs.version }}"
            echo "Mode: ${{ steps.extract-labels.outputs.mode }}"

     - name: Setup checkout@v2
       uses: actions/checkout@v2

     - name: Setup Node 16.x runtime
       uses: actions/setup-node@v1 
       with:
         node-version: 16.x
                           
     - name: Cache node_modules  
       uses: actions/cache@v2
       with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-

     - name: Set up JavaScript
       id: setup-js
       run: 
         echo "::set-output name=getData::\$(node -e \"console.log(JSON.stringify(require('../../../store/data.js').getData()))\")"


     - name: Store data
       run: | 
        echo "Mode: ${{ steps.setup-js.outputs.getData }}"