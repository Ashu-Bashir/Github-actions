name: ActionsTest

on:
  pull_request:
        branches: 
          - main
        types: [opened, synchronize, reopened, labeled]
  label:
        types: [created, edited]    
jobs:
 init:
    # if: ${{ contains(github.event.pull_request.labels.*.name, 'macos-latest') || contains(github.event.pull_request.labels.*.name, 'windows-latest') }}
    # runs-on: ${{ (github.event.pull_request.labels.*.name ) }}  

    # if: ${{ startsWith(github.event.pull_request.labels.*.name, 'os:') && startsWith(github.event.pull_request.labels.*.name, 'brand:')  && startsWith(github.event.pull_request.labels.*.name, 'v:') && startsWith(github.event.pull_request.labels.*.name, 'mode:')  }}
    # runs-on: macos-latest  

    if: ${{ contains(join(github.event.pull_request.labels.*.name, ' '), 'os:') }}
    runs-on: ${{ (github.event.pull_request.labels.*.name) }}

    
    steps: 
     - name: echo all lables
       run: |
         for label in ${{ join(github.event.pull_request.labels.*.name, ' ') }}; do
          echo "Label: $label"
         done

     - name: Extract Brand Label
       id: extract-brand
       run: |
           for label in ${{ join(github.event.pull_request.labels.*.name, ' ')}}; do
             if [[ $label == brand:* ]]; then
               brand_label=$(echo "$label" | sed -n 's/brand:\([^,]*\).*/\1/p')
               echo "Brand : $brand_label"
               echo "::set-output name=brand::${brand_label:-anywhere.app}"
               break
             fi
           done

     - name: Extract Mode Label
       id: extract-mode
       run: |
            for label in ${{ join(github.event.pull_request.labels.*.name, ' ')}}; do
              if [[ $label == mode:* ]]; then
                 mode_label=$(echo "$label" | sed -n 's/mode:\([^,]*\).*/\1/p')
                 echo "Mode : $mode_label"
                 echo "::set-output name=mode::${mode_label:-dev-ts}"
                 break
              fi
            done


     - name: Extract Version Label
       id: extract-version
       run: |
            for label in ${{ join(github.event.pull_request.labels.*.name, ' ')}}; do
              if [[ $label == v:* ]]; then
                 version_label=$(echo "$label" | sed -n 's/v:\([^,]*\).*/\1/p')
                 echo "Version: $version_label"
                 echo "::set-output name=version::${version_label:-1.0.0}"
                break
              fi
             done


     - name: Print all the params 
       run: |  
            echo "Brand: ${{ steps.extract-brand.outputs.brand }}"
            echo "Version: ${{ steps.extract-version.outputs.version }}"
            echo "Mode: ${{ steps.extract-mode.outputs.mode }}"


     - name: Setup checkout@v2
       uses: actions/checkout@v2

     - name: Setup Node 16.x runtime
       uses: actions/setup-node@v1 
       with:
         node-version: 16.x
                           
     - name: Cache node_modules  
       uses: actions/cache@v2
       with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-

     - name: Set up JavaScript
       id: setup-js
       run: 
         echo "::set-output name=getData::\$(node -e \"console.log(JSON.stringify(require('../../../store/data.js').getData()))\")"


     - name: Store data
       run: | 
        echo "Mode: ${{ steps.setup-js.outputs.getData }}"